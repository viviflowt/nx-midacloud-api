name: midacloud
version: '3.8'

services:
  proxy:
    image: nginx:latest
    restart: unless-stopped
    privileged: true
    user: root
    deploy:
      mode: global
      replicas: 1
      endpoint_mode: vip
      resources:
        limits:
          cpus: '4'
          memory: 4G
    networks:
      midacloud:
        aliases:
          - proxy.midacloud
    ports:
      - 80:80 # http
      - 443:443 # https
      - 8081:8081 # identity
      - 8082:8082 # tenant
      - 8083:8083 # notification
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - .docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  postgres:
    image: postgres:15.3
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      midacloud:
        aliases:
          - database.midacloud
    ports:
      - 5432:5432
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-U'
        - postgres
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - .docker/postgres/configure.sh:/docker-entrypoint-initdb.d/configure.sh

  redis:
    image: redis:7.2-rc2-alpine
    restart: unless-stopped
    deploy:
      mode: global
      replicas: 1
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      midacloud:
        aliases:
          - cache.midacloud
    ports:
      - 6379:6379
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  mongo:
    image: mongo:latest
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      midacloud:
        aliases:
          - mongo.midacloud
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db

  localstack:
    image: localstack/localstack
    restart: unless-stopped
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - EDGE_PORT=4566
      - LAMBDA_REMOTE_DOCKER=0
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LAMBDA_REMOTE_DOCKER=true
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_REMOVE_CONTAINERS=false
      - DEBUG=1
      - LS_LOG=${LS_LOG:-debug}
      - PERSISTENCE=1
    networks:
      midacloud:
        aliases:
          - aws.midacloud
    ports:
      - 4566-4597:4566-4597
      - 9200:4571
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:4566/_localstack/health
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - localstack_data:/tmp/localstack

  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    environment:
      - MH_STORAGE=maildir
    networks:
      midacloud:
        aliases:
          - mail.midacloud
    ports:
      - 25:1025 # smtp
      - 587:1025 # smtp
      - 1025:1025
      - 8001:8025
    volumes:
      - mailhog_data:/var/lib/mailhog

  account:
    image: midacloud:5000/service-account:latest
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: vip
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
    environment:
      - NODE_ENV=production
      - PORT=3000
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_ENDPOINT=http://aws.midacloud:4566
      - DATABASE_URL=postgres://postgres:postgres@database.midacloud/account
      - REDIS_URL=redis://cache.midacloud:6379
      - MONGO_URL=mongodb://mongo.midacloud:27017
    networks:
      midacloud:
        aliases:
          - account.midacloud
    ports:
      - 3000
    depends_on:
      - postgres
      - redis
      - mongo
      - localstack

  tenant:
    image: midacloud:5000/service-tenant:latest
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: vip
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
    environment:
      - NODE_ENV=production
      - PORT=3000
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_ENDPOINT=http://aws.midacloud:4566
      - DATABASE_URL=postgres://postgres:postgres@database.midacloud/tenant
      - REDIS_URL=redis://cache.midacloud:6379
      - MONGO_URL=mongodb://mongo.midacloud:27017
    networks:
      midacloud:
        aliases:
          - tenant.midacloud
    ports:
      - 3000
    depends_on:
      - postgres
      - redis
      - mongo
      - localstack

  notification:
    image: midacloud:5000/service-notification:latest
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: vip
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
    environment:
      - NODE_ENV=production
      - PORT=3000
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_ENDPOINT=http://aws.midacloud:4566
      - DATABASE_URL=postgres://postgres:postgres@postgres.midacloud/notification
      - REDIS_URL=redis://redis.midacloud:6379
      - MONGO_URL=mongodb://mongo.midacloud:27017
      - MAIL_HOST=mail.midacloud
      - MAIL_PORT=25
      - MAIL_USER=local
      - MAIL_PASS=local
    networks:
      midacloud:
        aliases:
          - notification.midacloud
    ports:
      - 3000
    depends_on:
      - postgres
      - redis
      - mongo
      - localstack
      - mailhog

networks:
  midacloud:

volumes:
  postgres_data:
  redis_data:
  mongo_data:
  localstack_data:
  mailhog_data:
